*colormanager.txt*      Plugin for managing colorschemes and background colors

==============================================================================
CONTENTS                                               *colormanager-contents*

1. Introduction                                    |colormanager-introduction|
2. Usage                                                  |colormanager-usage|
3. Configuration                                  |colormanager-configuration|
4. Example configuration                         |colormanager-example-config|
5. Commands                                            |colormanager-commands|
6. Functions                                          |colormanager-functions|

==============================================================================
1. INTRODUCTION                                    *colormanager-introduction*

colormanager.nvim - a plugin to store the last used colorscheme and
background color. Allows for easy switching between colorschemes and
toggling the background.

License: MIT

==============================================================================
2. USAGE                                                  *colormanager-usage*

To use the plugin, call the following Lua functions:

    `require('colormanager').select()` - select a colorscheme
    `require('colormanager').toggle()` - toggle the background color

==============================================================================
3. CONFIGURATION                                  *colormanager-configuration*

Configure the plugin by calling the setup function:

>
    require('colormanager').setup({
        colors = {
            -- list of colorschemes
        },
        fallback = 'scheme_name' -- fallback scheme
    })
<

==============================================================================
4. EXAMPLE CONFIGURATION                         *colormanager-example-config*

Example configuration for Lazy.nvim:

>
    return {
        'prepodobnuy/colormanager.nvim',
        priority = 1000,
        opts = {
            colors = {
                { name = 'Cyberdream', set = 'cyberdream' },
                { name = 'Everforest', set = 'everforest' },
                { name = 'Evergarden', set = 'evergarden' },
                -- For schemes without automatic color changes:
                { name = 'Github', dark = 'github_dark', light = 'github_light' },
                { name = 'Gruber Darker', set = 'gruber-darker' },
                { name = 'Gruvbox', set = 'gruvbox' },
                { name = 'Kanagawa', set = 'kanagawa' },
                { name = 'Mellow', set = 'mellow' },
                { name = 'Tokyonight', set = 'tokyonight' },
                { name = 'Vscode', set = 'vscode' },
            },
            fallback = 'Gruvbox',
        },
        dependencies = {
            'scottmckendry/cyberdream.nvim',
            'neanias/everforest-nvim',
            'everviolet/nvim',
            'projekt0n/github-nvim-theme',
            'blazkowolf/gruber-darker.nvim',
            'ellisonleao/gruvbox.nvim',
            'rebelot/kanagawa.nvim',
            'mellow-theme/mellow.nvim',
            'folke/tokyonight.nvim',
            'Mofiqul/vscode.nvim',
        },
    }
<

Each colorscheme entry can contain:
    name   - display name
    set    - colorscheme name (if no dark/light split)
    dark   - colorscheme name for dark background
    light  - colorscheme name for light background

If `dark` and `light` are specified, they will be used based on the value
of `vim.o.background`; otherwise, `set` is used.

==============================================================================
5. COMMANDS                                            *colormanager-commands*

The plugin does not provide direct Vim commands; use the Lua functions.

==============================================================================
6. FUNCTIONS                                          *colormanager-functions*

select()              *colormanager.select()*
    Opens a menu to select a colorscheme. Displays a list of available
    schemes and allows the user to choose one.

toggle()              *colormanager.toggle()*
    Toggles the background color between 'light' and 'dark'. Automatically
    applies the appropriate colorscheme variant if the current scheme has
    separate definitions for different backgrounds.

setup({opts})         *colormanager.setup()*
    Configures the plugin. Accepts a table with parameters:
        colors   - list of colorschemes
        fallback - fallback scheme (used by default)

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
